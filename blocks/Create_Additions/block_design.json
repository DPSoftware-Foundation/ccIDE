{
    "create_addition_electric_motor_set_speed": {
        "message0": "Set motor %1 speed to %2 RPM",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            },
            {
                "type": "input_value",
                "name": "RPM",
                "check": "Number"
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 70,
        "tooltip": "To set the speed of the Electric Motor, call setSpeed(rpm) where the argument rpm is a number between -256 and 256. The function will throw an exception if it is called too many times per second."
    },
    "create_addition_electric_motor_stop": {
        "message0": "Stop motor %1",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 70,
        "tooltip": "This is a shorthand for setSpeed(0)."
    },
    "create_addition_electric_motor_rotate": {
        "message0": "Calculate rotation for motor %1 to rotate %2 degrees with speed %3 RPM",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            },
            {
                "type": "input_value",
                "name": "DEGREES",
                "check": "Number"
            },
            {
                "type": "input_value",
                "name": "RPM",
                "check": "Number"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the time it will take to rotate the shaft by the argument degrees at the current speed. If the optional argument rpm is given it will set the speed of the motor and return the rotation time at the new speed."
    },
    "create_addition_electric_motor_translate": {
        "message0": "Translate motor %1 by %2 blocks with speed %3 RPM",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            },
            {
                "type": "input_value",
                "name": "BLOCKS",
                "check": "Number"
            },
            {
                "type": "input_value",
                "name": "RPM",
                "check": "Number"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the time it will take to rotate the shaft to push a piston or gantry shaft by distance given by the argument blocks at the current speed. "
    },
    "create_addition_electric_motor_get_speed": {
        "message0": "Get current speed from motor %1",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the current motor speed."
    },
    "create_addition_electric_motor_get_stress_capacity": {
        "message0": "Get stress capacity from motor %1",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the produced stress capacity (output su)."
    },
    "create_addition_electric_motor_get_energy_consumption": {
        "message0": "Get energy consumption from motor %1",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the motor energy consumption in FE/t."
    },
    "create_addition_electric_motor_get_max_input": {
        "message0": "Get max input from motor %1",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the Motor max input in fe."
    },
    "create_addition_electric_motor_get_max_output": {
        "message0": "Get max output from motor %1",
        "args0": [
            {
                "type": "input_value",
                "name": "MOTOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the Motor max output in fe (Always 0)."
    },

    "create_addition_accumulator_get_energy": {
        "message0": "Get current energy is store in accumulator %1",
        "args0": [
            {
                "type": "input_value",
                "name": "ACCUMULATOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the accumulator total stored charge in fe."
    },
    "create_addition_accumulator_get_capacity": {
        "message0": "Get total capacity in accumulator %1",
        "args0": [
            {
                "type": "input_value",
                "name": "ACCUMULATOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the accumulator total capacity in fe."
    },
    "create_addition_accumulator_get_percent": {
        "message0": "Get percent energy is store in accumulator %1",
        "args0": [
            {
                "type": "input_value",
                "name": "ACCUMULATOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the accumulator total charge in relation to the total capacity in percent."
    },
    "create_addition_accumulator_get_max_input": {
        "message0": "Get max input from accumulator %1",
        "args0": [
            {
                "type": "input_value",
                "name": "ACCUMULATOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the accumulator max input per block face in fe."
    },
    "create_addition_accumulator_get_max_output": {
        "message0": "Get max output from accumulator %1",
        "args0": [
            {
                "type": "input_value",
                "name": "ACCUMULATOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the accumulator max output per block face in fe."
    },
    "create_addition_accumulator_get_height": {
        "message0": "Get current height from accumulator %1",
        "args0": [
            {
                "type": "input_value",
                "name": "ACCUMULATOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the accumulator height in block."
    },
    "create_addition_accumulator_get_width": {
        "message0": "Get current width from accumulator %1",
        "args0": [
            {
                "type": "input_value",
                "name": "ACCUMULATOR",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the accumulator width in block."
    },

    "create_addition_pei_get_energy": {
        "message0": "Get current energy is store in source from PEI %1",
        "args0": [
            {
                "type": "input_value",
                "name": "PEI",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the connected contraption total stored charge in fe, (-1 if not connected)."
    },
    "create_addition_pei_get_capacity": {
        "message0": "Get total capacity in source from PEI %1",
        "args0": [
            {
                "type": "input_value",
                "name": "PEI",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the connected contraption total capacity in fe, (-1 if not connected)."
    },
    "create_addition_pei_is_connected": {
        "message0": "Is PEI %1 connected",
        "args0": [
            {
                "type": "input_value",
                "name": "PEI",
                "check": "Peripheral"
            }
        ],
        "output": "Boolean",
        "colour": 70,
        "tooltip": "This will return true if a contraption is connected."
    },
    "create_addition_pei_get_max_input": {
        "message0": "Get max input from PEI %1",
        "args0": [
            {
                "type": "input_value",
                "name": "PEI",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the PEI max input in fe."
    },
    "create_addition_pei_get_max_output": {
        "message0": "Get max output from PEI %1",
        "args0": [
            {
                "type": "input_value",
                "name": "PEI",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the PEI max output in fe."
    },

    "create_addition_relay_get_max_input": {
        "message0": "Get max input from relay %1",
        "args0": [
            {
                "type": "input_value",
                "name": "RELAY",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the Relay max input in fe."
    },
    "create_addition_relay_get_max_output": {
        "message0": "Get max output from relay %1",
        "args0": [
            {
                "type": "input_value",
                "name": "RELAY",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the Relay max output in fe."
    },
    "create_addition_relay_get_throughput": {
        "message0": "Get current throughput relay %1",
        "args0": [
            {
                "type": "input_value",
                "name": "RELAY",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the current throughput in fe."
    },
    "create_addition_relay_is_powered": {
        "message0": "Is relay %1 powered",
        "args0": [
            {
                "type": "input_value",
                "name": "RELAY",
                "check": "Peripheral"
            }
        ],
        "output": "Boolean",
        "colour": 70,
        "tooltip": "This will return the redstone state of the Relay."
    },

    "create_addition_da_rotational_speed_control_set_target_speed": {
        "message0": "Set target speed to %1 rpm to controller %2 at %3 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "RPM"
            },
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 70,
        "tooltip": "This will set the target speed of a Rotation Speed Controller attached to the side of a Digital Adapter."
    },
    "create_addition_da_rotational_speed_control_get_target_speed": {
        "message0": "Get target speed from controller %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the target speed of a Rotation Speed Controller attached to the side of a Digital Adapter."
    },

    "create_addition_da_stressometer_get_kinetic_stress": {
        "message0": "Get current stress from stressometer %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the stress of a Stressometer attached to the side of a Digital Adapter."
    },
    "create_addition_da_stressometer_get_kinetic_capacity": {
        "message0": "Get capacity stress from stressometer %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the stress capacity of a Stressometer attached to the side of a Digital Adapter."
    },

    "create_addition_da_speedometer_get_kinetic_speed": {
        "message0": "Get current speed from speedometer %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the speed of a Speedometer attached to the side of a Digital Adapter."
    },
    "create_addition_da_speedometer_get_kinetic_max_speed": {
        "message0": "Get max speed from speedometer %1 of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the top speed as set by Create."
    },

    "create_addition_da_pulleys_get_pulleys_distance": {
        "message0": "Get current distance from pulleys %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the extended distance of a Rope, Hose, or Elevator -Pulley attached to the side of a Digital Adapter."
    },

    "create_addition_da_elevator_pulley_get_elevator_floor": {
        "message0": "Get current floor from elevator %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the current floor index of an Elevator Pulley attached to the side of a Digital Adapter."
    },
    "create_addition_da_elevator_pulley_get_elevator_floors": {
        "message0": "Get total floors from elevator %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the number of floors of an Elevator Pulley attached to the side of a Digital Adapter."
    },
    "create_addition_da_elevator_pulley_get_elevator_floor_name": {
        "message0": "Get floor %1 name from elevator %2 at %3 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "INDEX",
                "check": "Number"
            },
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get floor name at floor index of a Elevator Pulley attached to the side of a Digital Adapter."
    },
    "create_addition_da_elevator_pulley_goto_elevator_floor_name": {
        "message0": "Goto floor %1 with elevator %2 at %3 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "INDEX",
                "check": "Number"
            },
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "output": "Number",
        "colour": 70,
        "tooltip": "This will trigger a Elevator Pulley attached to the side of a Digital Adapter to move to the given floor index and returns the delta-y to move."
    },

    "create_addition_da_mechanical_piston_get_piston_distance": {
        "message0": "Get current extended distance from piston %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the extended distance of a Mechanical Piston attached to the side of a Digital Adapter."
    },

    "create_addition_da_mechanical_bearing_get_bearing_angle": {
        "message0": "Get current angle from Bearing %1 at %2 side of adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            },
            {
                "type": "field_dropdown",
                "name": "SIDE",
                "options": [
                    ["Top", "top"],
                    ["Bottom", "bottom"],
                    ["North", "north"],
                    ["East", "east"],
                    ["West", "west"],
                    ["South", "south"]
                ]
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will get the angle of a Mechanical Bearing attached to the side of a Digital Adapter."
    },

    "create_addition_da_dp_link_print": {
        "message0": "Print %1 to display %2 with adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "TEXT",
                "check": "String"
            },
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 70,
        "tooltip": "This will print a string on the currently selected line to an internal buffer which can be read by a Display Link and put on a Display Board, print will increment the currently selected line."
    },
    "create_addition_da_dp_link_clear_line": {
        "message0": "Clear current line in display %1 with adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 70,
        "tooltip": "This will clear the text on the currently selected line."
    },
    "create_addition_da_dp_link_clear": {
        "message0": "Clear display %1 with adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 70,
        "tooltip": "This will clear all the text on all lines."
    },
    "create_addition_da_dp_link_get_line": {
        "message0": "Get current line from display %1 with adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the currently selected line (starts at 1)."
    },
    "create_addition_da_dp_link_set_line": {
        "message0": "Goto line %1 in display %2 with adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "LINE",
                "check": "Number"
            },
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            }
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 70,
        "tooltip": "This will set the currently selected line to line (starts at 1)."
    },
    "create_addition_da_dp_link_get_max_line": {
        "message0": "Get max line in display %1 with adapter",
        "args0": [
            {
                "type": "input_value",
                "name": "DA",
                "check": "Peripheral"
            }
        ],
        "output": "Number",
        "colour": 70,
        "tooltip": "This will return the max number of lines that can be displayable using the Digital Adapter (will always return 16)."
    }
}
